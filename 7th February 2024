class Solution {
    public String frequencySort(String s) {
        Map<Character, Integer> charFreqMap = new HashMap<>();
        
        // Count the frequency of each character
        for (char c : s.toCharArray()) {
            charFreqMap.put(c, charFreqMap.getOrDefault(c, 0) + 1);
        }
        
        // Create a priority queue to sort characters based on frequency
        PriorityQueue<Character> maxHeap = new PriorityQueue<>(
            (a, b) -> charFreqMap.get(b) - charFreqMap.get(a)
        );
        
        // Add all characters to the priority queue
        maxHeap.addAll(charFreqMap.keySet());
        
        // Build the sorted string
        StringBuilder result = new StringBuilder();
        while (!maxHeap.isEmpty()) {
            char c = maxHeap.poll();
            int freq = charFreqMap.get(c);
            for (int i = 0; i < freq; i++) {
                result.append(c);
            }
        }
        
        return result.toString();
    }
}
